#include <iostream>
#include <vector>
#include <string>
using namespace std;

void printBoard(vector<vector<char>> board) {
    int n = board.size();
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            cout << board[i][j] << " ";
        }
        cout << endl;
    }
    cout << "********" << endl;
}

bool isSafe(vector<vector<char>> board, int row, int col) {
    int n = board.size();
    int knightMoves[8][2] = {{-2, -1}, {-2, 1}, {-1, -2}, {-1, 2}, {1, -2}, {1, 2}, {2, -1}, {2, 1}};
    
    for (int i = 0; i < 8; i++) {
        int newRow = row + knightMoves[i][0];
        int newCol = col + knightMoves[i][1];
        
        if (newRow >= 0 && newRow < n && newCol >= 0 && newCol < n && board[newRow][newCol] == 'K') {
            return false;
        }
    }
    return true;
}

int nKnights(vector<vector<char>>& board, int row, int knightsPlaced) {
    int n = board.size();
    if (knightsPlaced == n) {
        printBoard(board);
        return 1;
    }
    if (row == n) {
        return 0;
    }

    int count = 0;

    for (int j = 0; j < n; j++) {
        if (isSafe(board, row, j)) {
            board[row][j] = 'K';
            count += nKnights(board, row + 1, knightsPlaced + 1);
            board[row][j] = '.';
        }
    }
    count += nKnights(board, row + 1, knightsPlaced);

    return count;
}

int main() {
    int n = 4;
    vector<vector<char>> board(n, vector<char>(n, '.'));
    int count = nKnights(board, 0, 0);
    cout << "Total counts: " << count << endl;
    return 0;
}
